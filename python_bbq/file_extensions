                              INTERPTER
                            /    |      \
source code -> | compiler -> byte code -> VM(<-Libraries) | -> running code

.pyc
- automatically generated by the interpreter when you import a module, or another .py file,
which speeds up future importing of that module. Speeds up the loading of the file, not its execution
- created in the __pycache__ file
- the interpreter compiles the source code to BYTECODE. This is in the .pyc file
- it is parsed to the virtual machine
=> services.cpython-36.pyc - shows that the name of the source file is services.pyc,
created by cpython. The interpreter is version 3.6


.pyo
- file type is also created by the interpreter when a module is imported.
- results just from running the interpreter when OPTIMIZATION settings are enabled.
The optimizer is enabled by adding the "-O" flag when we invoke the Python interpreter.
python -O palindrome.py

.pyd
- platform-specific to the Windows class of operating systems.
- library file containing Python code which can be called out to and used by other Python applications.
In order to make this library available to other Python programs, it is packaged as a dynamic link library (DLL).
- to create a .pyd file, you need to create a module named, for example, example.pyd. In this module,
you will need to create a function named PyInit_example().



BYTECODE is a:
- lower level,
- platform independent,
- efficient and
- intermediate
representation of the source code


python VIRTUAL MACHINE
It’s just a big loop that iterates through your byte code instructions, one by one,
to carry out their operations. The PVM is the runtime engine of Python.
It is the component that truly runs your scripts. Technically, it’s just the last step
of what is called the Python interpreter.